---
title: "Crew_WorkLoad"
format: html
editor: source
---

## Packages
```{r}

if (!require(librarian)){
  install.packages("librarian")
  library(librarian)
}

# librarian downloads, if not already downloaded, and reads in needed packages
librarian::shelf(tidyverse, here, DBI, odbc)



```

## Database Connection
```{r}
# Connect to the `ENTERPRISE` database
tryCatch({
  db_connection <- DBI::dbConnect(odbc::odbc(),
                                     Driver = "SnowflakeDSIIDriver",
                                     Server = "hawaiianair.west-us-2.azure.snowflakecomputing.com",
                                     WAREHOUSE = "DATA_LAKE_READER",
                                     Database = "ENTERPRISE",
                                     UID = "jacob.eisaguirre@hawaiianair.com",
                                     authenticator = "externalbrowser")
  print("Database Connected!")
}, error = function(cond) {
  print("Unable to connect to Database.")
})

# Set schema
dbExecute(db_connection, "USE SCHEMA CREW_ANALYTICS")

```


## Query Flight Leg
```{r}

fl_q <- "select FLIGHT_NO, FLIGHT_DATE, DEPARTING_CITY, ARRIVAL_CITY, PAIRING_NO, PAIRING_DATE, 
         SCHED_DEPARTURE_DATE, SCHED_DEPARTURE_TIME, SCHED_ARRIVAL_TIME, DEADHEAD, PAIRING_POSITION, UPDATE_DATE, UPDATE_TIME
         FROM CT_FLIGHT_LEG
         WHERE FLIGHT_DATE > '2023-01-01';"

raw_flightleg <- dbGetQuery(db_connection, fl_q)


```

## Clean Flight leg
```{r}

clean_flightleg <- raw_flightleg %>% 
  mutate(update_dt = paste0(UPDATE_DATE, UPDATE_TIME, sep = " ")) %>% 
  group_by(FLIGHT_NO, FLIGHT_DATE, DEPARTING_CITY, ARRIVAL_CITY, PAIRING_NO, 
           PAIRING_DATE, SCHED_DEPARTURE_DATE, SCHED_DEPARTURE_TIME, SCHED_ARRIVAL_TIME, 
           PAIRING_POSITION) %>% 
  filter(update_dt == max(update_dt)) %>% 
  mutate(p_key = cur_group_id()) %>% 
  filter(!duplicated(p_key))


```


## Query Master Pairing
```{r}

mp_q <- "select CREW_ID, BID_PERIOD, PAIRING_NO, PAIRING_DATE, PAIRING_POSITION, PAIRING_STATUS, UPDATE_DATE, UPDATE_TIME
         FROM CT_MASTER_PAIRING
         LIMIT 10;"

raw_masterpairing <- dbGetQuery(db_connection, mp_q)

```

